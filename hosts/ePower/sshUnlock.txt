Audience

This text is intended for users who wish to remotely unlock their
natively encrypted ZFS root filesystem with SSH during the early
stages of system boot up.

=================================================================

Steps

By default, the initial RAM disk image, (hereafter refered to as
initrd) only includes essential kernel modules needed for mounting the
root filesystem.

To enable network connection during this stage of system boot, you
need to instruct NixOS to include kernel modules needed for the
network adapter.

Check which module is needed with:

  nix-shell -p pciutils --run "lspci -v | grep -iA8 'network\|ethernet'"

Then, add the the modules to

  zfs-root.boot.availableKernelModules

option inside the per-host configuration file.  This file is located
at hosts/exampleHost/default.nix.

By default, initrd uses DHCP auto-configuration for networking.  If
you need to specify a static IP address, see the documentation for
"ip=" kernel command line option for NFS root:

  https://www.kernel.org/doc/Documentation/filesystems/nfs/nfsroot.txt

Then, add the necessary kernel command line options to

  zfs-root.boot.kernelParams

option inside the per-host configuration file.

Finally, you need to generate a pair of SSH private keys exclusively
for use with decrypting the root filesystem during boot.  This pair of
keys should not be used anywhere else.  Reasons for this can be found
in the documentation NixOS option:

  boot.initrd.network.ssh.hostKeys

> Do NOT use your regular SSH host private keys for this purpose or
> you'll expose them to regular users! Additionally, even if your initrd
> supports secrets, if you're using initrd SSH to unlock an encrypted
> disk then using your regular host keys exposes the private keys on
> your unencrypted boot partition.

You can generate host key with:

  ssh-keygen -t ed25519 -N "" -f "/var/lib/ssh_unlock_zfs_ed25519_key"
  ssh-keygen -t rsa -N "" -f "/var/lib/ssh_unlock_zfs_rsa_key"

If you are performing a system installation, change path from
/var/lib to /mnt/var/lib in both commands.
